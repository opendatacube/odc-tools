name: Build test docker image

on:
  workflow_dispatch:
  push:
    paths:
      - 'docker/**'
      - '.github/workflows/build-test-docker.yml'


jobs:
  build-docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Config
      id: cfg
      run: |
        push_image=no
        if [ ${GITHUB_REF:-} = "refs/heads/develop" ]; then
           push_image=yes
        fi

        echo "::set-output name=push_image::${push_image}"

    - uses: actions/cache@v2
      name: Cache Python Env Files
      id: cache_env
      with:
        path: |
          docker/.build
          docker/wheels

        key: ${{ runner.os }}-env-${{ hashFiles('docker/requirements.txt', 'docker/constraints.txt', 'docker/nobinary.txt', 'docker/Makefile') }}

    - uses: actions/cache@v2
      name: Cache pip and wheels
      if: steps.cache_env.outputs.cache-hit != 'true'
      id: cache_pip
      with:
        path: |
          docker/.cache

        key: ${{ runner.os }}-pip-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Build Wheels
      if: steps.cache_env.outputs.cache-hit != 'true'
      run: |
        make -C docker compile

    - name: Build test docker
      run: |
        docker pull opendatacube/odc-test-runner:latest || true
        make -C docker dkr-no-deps

    - name: Run tests
      timeout-minutes: 10
      run: |
        cd tests
        docker-compose up -d
        docker-compose exec -T tools-tester pytest --timeout=30

    - name: DockerHub Login
      if: steps.cfg.outputs.push_image == 'yes'
      run: |
        echo "Login to DockerHub"
        echo "${{ secrets.DOCKER_PASS }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin

    - name: Docker Push
      if: steps.cfg.outputs.push_image == 'yes'
      run: |
        docker push opendatacube/odc-test-runner:latest

